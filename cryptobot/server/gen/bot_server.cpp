// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include "Bot.h"
#include <thrift/protocol/TBinaryProtocol.h>
#include <thrift/server/TSimpleServer.h>
#include <thrift/transport/TServerSocket.h>
#include <thrift/transport/TBufferTransports.h>

using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;
using namespace ::apache::thrift::server;

using boost::shared_ptr;

using namespace ::server;

class BotHandler : virtual public BotIf {
public:
    BotHandler() { }

    void create_bot(const std::string& username, const std::string& name) {
        // Your implementation goes here
        printf("create_bot\n");
    }

    void delete_bot(const std::string& username, const std::string& name) {
        // Your implementation goes here
        printf("delete_bot\n");
    }

    void run_bot(const std::string& username, const std::string& name) {
        // Your implementation goes here
        printf("run_bot\n");
    }

    void stop_bot(const std::string& username, const std::string& name) {
        // Your implementation goes here
        printf("stop_bot\n");
    }
};

